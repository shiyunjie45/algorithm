package com.sky.algorithmleetcode.biancheng;

/**
 *举个例子，一个小偷正在商店行窃，他随身携带的背包可以装一定重量的商品，商店中摆放着不同重量和价值的商品，小偷应该如何选择才能获得最大的收益？这样的问题就属于背包问题。
 * 根据所选物品是否可再分（比如选择某物品的 1/2），背包问题可分为以下两种：
 * 0-1 背包问题：挑选物品时，单个物品要么放弃，要么全部装入背包，不存在“装入 1/2 物品”的情况；
 * 部分背包问题：挑选物品时，单个物品可再分，例如将物品的 1/2 装入背包。
 * 本节给您讲解的是如何使用贪心算法解决部分背包问题。
 * 部分背包问题的解决方案
 * 接下来以“小偷在商店行窃，商店的商品都可再分”为例，给您讲解如何解决部分背包问题。
 * 为了方便讲解，我们做以下假设：
 * 背包最多可以承受的商品重量为 W（后续简称承重）；
 * 商店共有 n 件商品，它们都是可再分的，其中第 i 件商品的总重量为 Wi，总收益为 Pi。
 * 显然，要想获得最大的收益，小偷需要做到以下 2 点：
 * 充分利用背包的承重，背包装的商品越多，获得收益就越大；
 * 确保选中的 W 重量商品中，单位重量下获得的收益最大。
 * 结合以上 2 点，我们可以采用贪心算法来解决这个问题，具体的解决方案是：计算每个商品的收益率（即 Pi/Wi），优先选择收益率最大的商品，直至选择的商品总重量恰好为 W。
 * 假设背包的承重为 20，商店中共有 3 种商品，它们的重量和收益分别为：
 * 商品 1：重量 10，收益 60，单位重量的收益为 6；
 * 商品 2：重量 20，收益 100，单位重量的收益为 5；
 * 商品 3：重量 30，收益 120，单位重量的收益为 4。
 * 通过比较收益率，以上 3 种商品装入背包的顺序依次为：商品 1 > 商品 2 > 商品 3。受到背包承重的限制，商品 1 可以全部装入背包，而商品 2 只能装一半（10 斤），商品 3 无法被装入。
 * 每种商品最多拿一个
 */
public class L9Solution {
    public static void getPackage(float[] w, float[] p, float W){
        //利益最大的是第几个
//        int i = 0;
//        float maxP = 0;
//        for (int i1 = 0; i1 < w.length; i1++) {
//            if (p[i1]/w[i1]>maxP){
//                maxP = p[i1]/w[i1];
//                i = i1;
//            }
//        }
//        System.out.println("拿第"+i+"种商品"+W/maxP+"个");

        for (int i = 0; i < w.length; i++) {
            for (int i1 = i+1; i1 < w.length; i1++) {
                if (p[i]/w[i]<p[i1]/w[i1]){
                    float tmp = p[i];
                    p[i] = p[i1];
                    p[i1] = tmp;
                    tmp = w[i];
                    w[i] = w[i1];
                    w[i1] = tmp;
                }
            }
        }

        int i = 0;
        while (W>0){
            if (W-w[i]>0){
                W = W - w[i];
                System.out.println("总重量为"+w[i]+",总价值为"+p[i]+"的商品全部拿走");
            }else{
                System.out.println("总重量为"+w[i]+",总价值为"+p[i]+"的商品拿"+W*100.0/w[i]+"%");
                break;
            }
            i++;
        }

    }
    public static void main(String[] args){
        float[] w = {10,30,20};
        float[] p = {60,100,120};
        int W = 50;
        getPackage(w,p,W);
    }
}
